shinyServer(function(input, output, session) {

  r <- reactiveValues(df = read.csv("pollution by sectors and countries.csv", header=TRUE, sep = ";"), source = NULL)
  # You can access the values of the widget (as a vector)
  # with input$checkGroup, e.g.
  output$value <- renderPrint({ input$checkGroup })

  output$speedPlot <- renderPlotly({
    #validate() ensures that our code is only executed if the dataframe
    # is available. The dataframe may not be present if the user hasnt uploaded
    # any csv file yet. The "vis" errorClass is used to show where the plot will
    # be plotted (optional).
    validate(need(r$df, "Waiting for data."), errorClass = "vis")
    # To read the reactive dataframe 'df', we need to "evaluate" it.
    # We do this by calling it as a function df(). 
    df_vis <- r$df
    #   Plot med sliders sÃ¥dan at du kan se hvordan det bliver gjort
    #plot <- df_vis %>% ggplot(aes(x=year, y = co2)) + geom_point() + xlim(input$slider) + ylim(input$slider2)
    # Now we can create a plot of the data.
    df_vis <- df_vis %>% filter(country %in% input$checkGroup)
    plot <- df_vis %>% ggplot(aes(x=year, y = co2)) + geom_point()
    plot <- ggplotly(plot)
    return(plot)
  })
  
})
